Redis支持五种数据类型：string(字符串)，hash(哈希)，list(列表)，set(集合)及zset(sorted set：有序集合)。

一、String（字符串）
    string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。
    string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象。
    string类型是Redis最基本的数据类型，string类型的值最大能存储512MB。

    实例：
        redis 127.0.0.1:6379> SET name "runoob"
        OK
        redis 127.0.0.1:6379> GET name
        "runoob"
    注意：一个键最大能存储512MB。

二、Hash（哈希）
    Redis hash 是一个键值(key=>value)对集合。
    Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。

    实例：
        redis> HMSET myhash field1 "Hello" field2 "World"
        "OK"
        redis> HGET myhash field1
        "Hello"
        redis> HGET myhash field2
        "World"
    每个hash可以存储232-1键值对（40多亿）。

三、List（列表）
    Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。

    实例：
        redis 127.0.0.1:6379> lpush runoob redis
        (integer) 1
        redis 127.0.0.1:6379> lpush runoob mongodb
        (integer) 2
        redis 127.0.0.1:6379> lpush runoob rabitmq
        (integer) 3
        redis 127.0.0.1:6379> lrange runoob 0 10
        1) "rabitmq"
        2) "mongodb"
        3) "redis"
    列表最多可存储232-1元素(4294967295, 每个列表可存储40多亿)。

四、Set（集合）
    Redis的Set是string类型的无序集合。
    集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。

    sadd命令:添加一个string元素到key对应的set集合中，成功返回1，如果元素已经在集合中返回0，如果key对应的set不存在则返回错误。

    sadd key member
    实例:
        redis 127.0.0.1:6379> sadd runoob redis
        (integer) 1
        redis 127.0.0.1:6379> sadd runoob mongodb
        (integer) 1
        redis 127.0.0.1:6379> sadd runoob rabitmq
        (integer) 1
        redis 127.0.0.1:6379> sadd runoob rabitmq
        (integer) 0
        redis 127.0.0.1:6379> smembers runoob
        1) "redis"
        2) "rabitmq"
        3) "mongodb"
    注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。
    集合中最大的成员数为232-1(4294967295, 每个集合可存储40多亿个成员)。

五、zset(sorted set：有序集合)
    Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。
    不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
    zset的成员是唯一的,但分数(score)却可以重复。

    zadd 命令:添加元素到集合，元素在集合中存在则更新对应score

    zadd key score member
    实例:
        redis 127.0.0.1:6379> zadd runoob 0 redis
        (integer) 1
        redis 127.0.0.1:6379> zadd runoob 0 mongodb
        (integer) 1
        redis 127.0.0.1:6379> zadd runoob 0 rabitmq
        (integer) 1
        redis 127.0.0.1:6379> zadd runoob 0 rabitmq
        (integer) 0
        redis 127.0.0.1:6379> > ZRANGEBYSCORE runoob 0 1000
        1) "mongodb"
        2) "rabitmq"
        3) "redis"

六、各个数据类型应用场景：
    1.String(字符串)
    简介：二进制安全
    特性：可以包含任何数据,比如jpg图片或者序列化的对象,一个键最大能存储512M

    2.Hash(字典)
    简介：键值对集合,即编程语言中的Map类型
    特性：适合存储对象,并且可以像数据库中update一个属性一样只修改某一项属性值(Memcached中需要取出整个字符串反序列化成对象修改完再序列化存回去)
    场景：存储、读取、修改用户属性

    3.List(列表)
    简介：链表(双向链表)
    特性：增删快,提供了操作某一段元素的API
    场景：1,最新消息排行等功能(比如朋友圈的时间线) 2,消息队列

    4.Set(集合)
    简介：哈希表实现,元素不重复
    特性：1,添加、删除,查找的复杂度都是O(1) 2,为集合提供了求交集、并集、差集等操作
    场景：1,共同好友 2,利用唯一性,统计访问网站的所有独立ip 3,好用推荐时,根据tag求交集,大于某个阈值就可以推荐

    5.Sorted Set(有序集合)
    简介：将Set中的元素增加一个权重参数score,元素按score有序排列
    特性：数据插入集合时,已经进行天然排序
    场景：1,排行榜 2,带权重的消息队列

